/zhome/dd/4/109414/.lsbatch/1721302788.22160618.shell: line 1: syntax error near unexpected token `genpath'
/zhome/dd/4/109414/.lsbatch/1721302788.22160618.shell: line 1: `addpath(genpath("/zhome/dd/4/109414/Validationstudy/accusleep_v4/"))'

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 22160618: <NONAME> in cluster <dcc> Exited

Job <NONAME> was submitted from host <hpclogin1> by user <laurose> in cluster <dcc> at Thu Jul 18 13:39:48 2024
Job was executed on host(s) <n-62-31-4>, in queue <hpc>, as user <laurose> in cluster <dcc> at Thu Jul 18 13:39:49 2024
</zhome/dd/4/109414> was used as the home directory.
</zhome/dd/4/109414/Validationstudy/accusleep_v4/accusleep> was used as the working directory.
Started at Thu Jul 18 13:39:49 2024
Terminated at Thu Jul 18 13:39:51 2024
Results reported at Thu Jul 18 13:39:51 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
addpath(genpath("/zhome/dd/4/109414/Validationstudy/accusleep_v4/"))
imageLocation  ='/work3/laurose/accusleep/data/prep/training_images_2024-03-01_18-07-24/';
imds           = imageDatastore(imageLocation, 'IncludeSubfolders',true,'LabelSource','foldernames');
CheckpointPath = '/zhome/dd/4/109414/Validationstudy/accusleep_v2/AccuSleep/accusleep/models/balanced/';  

modeltype_    = "accusleep"; 
isWCE_        = 1;
fold          = '1'
w_vec         = [1];
SR            = 512; 
epochLen      = 4; 
epochs        = 9; 
minBoutLen    = 5; 

[imdsTrain,imdsValidation] = splitEachLabel(imds,0.8,"randomize");
[net]            = train_dlnetwork(imdsTrain,imdsValidation,CheckpointPath,modeltype_,isWCE_,fold,w_vec); 

disp("done training")
save('/zhome/dd/4/109414/Validationstudy/accusleep_v4/accusleep/models/balanced/net_f1_weights.mat', 'net');
outdir = "/zhome/dd/4/109414/Validationstudy/accusleep_v4/accusleep/models/balanced/";

load fileList_test.mat

nFiles        = size(fileList,1);
all_pred      = [];
all_labels    = [];
all_labs      = [];
%allMetrics    = zeros(nFiles, 5, 3); % For n subjects, 5 metrics, 3 classes

for i = 1:nFiles
    
    data   = struct;
    disp(fileList{i,1})
    data.a = load(fileList{i,1});
    data.b = load(fileList{i,2});
    data.c = load(fileList{i,3});

    fieldNamesA = fieldnames(data.a);
    fieldNamesC = fieldnames(data.c);
    
    EEG    = data.a.(fieldNamesA{1});
    EMG    = data.b.EMG; 
    labels = data.c.(fieldNamesC{1}); 

    calibrationData = createCalibrationData(EEG, EMG, labels, SR, epochLen);
    
    pred = AccuSleep_classify(EEG, EMG, net, SR, epochLen, calibrationData, minBoutLen);
    
    %if size(pred,1)>1 % if pred is a column vector => row 
    %   pred = pred'; 

(... more ...)
------------------------------------------------------------

Exited with exit code 2.

Resource usage summary:

    CPU time :                                   0.31 sec.
    Max Memory :                                 -
    Average Memory :                             -
    Total Requested Memory :                     1024.00 MB
    Delta Memory :                               -
    Max Swap :                                   -
    Max Processes :                              -
    Max Threads :                                -
    Run time :                                   1 sec.
    Turnaround time :                            3 sec.

The output (if any) is above this job summary.

